(()=>{"use strict";var e=document.querySelector("#popupProfile"),t=e.querySelector("#sign-name"),n=e.querySelector("#sign-profession"),r=document.querySelector("#popupAdd"),o=(document.querySelector("#popupImg"),document.querySelector("#popupAddAvatar")),i=document.querySelector(".profile__avatar"),a={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save",disabledButtonClass:"popup__save_disabled",inputErrorClass:"popup__input-error_active"};function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t,n){var r,o,i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o=function(){i._inputList.forEach((function(e){i._hideInputError(e)}))},(r="deleteErrors")in this?Object.defineProperty(this,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[r]=o,this._parameters=t,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._parameters.inputSelector)),this._buttonElement=this._formElement.querySelector(this._parameters.submitButtonSelector)}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._parameters.inputErrorClass),n.classList.add(this._parameters.inputErrorClass),n.textContent=t}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));t.textContent="",t.classList.remove(this._parameters.inputErrorClass),e.classList.remove(this._parameters.inputErrorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasNotValidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_changeButtonState",value:function(){this._hasNotValidInput(this._inputList)?this.disableButtonSubmit():(this._buttonElement.classList.remove(this._parameters.inactiveButtonClass),this._buttonElement.disabled=!1)}},{key:"_setEventListeners",value:function(){var e=this;this._changeButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._changeButtonState()}))}))}},{key:"disableButtonSubmit",value:function(){this._buttonElement.setAttribute("disabled",!0),this._buttonElement.classList.add(this._parameters.inactiveButtonClass)}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&u(t.prototype,n),e}();function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var f=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),l(this,"_handleEscClose",(function(e){"Escape"===e.key&&n.closePopup()})),l(this,"_closePopups",(function(e){(e.target.classList.contains("popup")||e.target.classList.contains("popup__close"))&&n.closePopup()})),l(this,"changeButtonText",(function(e){n._submitBtn.textContent=e})),this._popup=document.querySelector(t),this._submitBtn=this._popup.querySelector(".popup__save")}var t,n;return t=e,(n=[{key:"openPopup",value:function(){this._popup.classList.add("popup_visible"),document.addEventListener("keydown",this._handleEscClose)}},{key:"closePopup",value:function(){this._popup.classList.remove("popup_visible"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){this._popup.addEventListener("mousedown",this._closePopups)}}])&&s(t.prototype,n),e}();function p(e){return(p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(e,t,n){return(d="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=m(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function _(e,t){return(_=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function y(e,t){return!t||"object"!==p(t)&&"function"!=typeof t?v(e):t}function v(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function m(e){return(m=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=m(r);if(o){var n=m(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return y(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),b(v(n=i.call(this,e)),"_getInputValues",(function(){var e={};return n._inputsList.forEach((function(t){e[t.name]=t.value})),e})),b(v(n),"_handlerSubmit",(function(e){e.preventDefault(),n._handleFormSubmit(n._getInputValues())})),n._handleFormSubmit=t,n._form=n._popup.querySelector(".popup__form"),n._inputsList=Array.from(n._form.querySelectorAll(".popup__input")),n}return t=a,(n=[{key:"closePopup",value:function(){d(m(a.prototype),"closePopup",this).call(this),this._form.reset()}},{key:"setEventListeners",value:function(){d(m(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this._handlerSubmit)}}])&&h(t.prototype,n),a}(f);function k(e){return(k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function w(e,t){return(w=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function S(e,t){return!t||"object"!==k(t)&&"function"!=typeof t?E(e):t}function E(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function C(e,t,n){return(C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function P(e){return(P=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var L=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&w(e,t)}(o,e);var t,n,r=(t=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=P(t);if(n){var o=P(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return S(this,e)});function o(e){var t,n,i,a,u;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o),u=function(e,r){C((t=E(n),P(o.prototype)),"openPopup",t).call(t),n._popupImgPic.src=r,n._popupImgPic.alt=e,n._popupImgTxt.textContent=e},(a="openPopup")in(i=E(n=r.call(this,e)))?Object.defineProperty(i,a,{value:u,enumerable:!0,configurable:!0,writable:!0}):i[a]=u,n._popupImgPic=n._popup.querySelector(".popup__img"),n._popupImgTxt=n._popup.querySelector(".popup__caption"),n}return o}(f);function O(e){return(O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function I(e,t,n){return(I="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=T(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function R(e,t){return(R=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function q(e,t){return!t||"object"!==O(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function T(e){return(T=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var A=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&R(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=T(r);if(o){var n=T(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return q(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._submitHandler=t,n._form=n._popup.querySelector(".popup__form_type_confirm"),n}return t=a,(n=[{key:"openPopup",value:function(e){this._cardId=e,I(T(a.prototype),"openPopup",this).call(this)}},{key:"setEventListeners",value:function(){var e=this;I(T(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._submitHandler(e._cardId)}))}}])&&j(t.prototype,n),a}(f);function B(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var x=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e,t._container)}))}},{key:"addItem",value:function(e){this._renderer(e,this._container)}}])&&U(t.prototype,n),e}();function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var N=function(){function e(t,n,r,o,i,a){var u,c,s=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),c=function(){s._newCardDelete.addEventListener("click",(function(){return s._openPopupConfirm(s._id)})),s._newCardLike.addEventListener("click",(function(e){s._likeCard(e)})),s._newCardImage.addEventListener("click",(function(){return s._handleCardClick(s._name,s._link)}))},(u="_setListeners")in this?Object.defineProperty(this,u,{value:c,enumerable:!0,configurable:!0,writable:!0}):this[u]=c,this._name=t.name,this._link=t.link,this._likes=t.likes,this._id=t._id,this._owner=t.owner._id,this._actualUserId="b13e5b9ee640ea184df49200",this._handleSendLike=o,this._handleDeleteLike=i,this._cardSelector=n,this._handleCardClick=r,this._openPopupConfirm=a,this.element=this._getTemplate(),this._newCardTitle=this.element.querySelector(".card__title"),this._newCardImage=this.element.querySelector(".card__image"),this._newCardDelete=this.element.querySelector(".card__delete"),this._newCardLike=this.element.querySelector(".card__like-btn"),this._newCardLikesCounter=this.element.querySelector(".card__like_counter")}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".card__item").cloneNode(!0)}},{key:"createCard",value:function(){return this._newCardTitle.textContent=this._name,this._newCardImage.src=this._link,this._newCardImage.alt=this._name,this._checkLikes(),this._checkAuthor(),this._setListeners(),this.element}},{key:"getId",value:function(){return this._id}},{key:"_likeCard",value:function(e){var t=e.target;t.classList.toggle("card__like-btn_active"),t.classList.contains("card__like-btn_active")?this._handleSendLike(this._id):this._handleDeleteLike(this._id)}},{key:"_checkLikes",value:function(){var e=this;this._likes.forEach((function(t){t._id===e._actualUserId&&e._newCardLike.classList.add("card__like-btn_active")})),this.countLikes(this._likes.length)}},{key:"countLikes",value:function(e){this._newCardLikesCounter.textContent=e}},{key:"_checkAuthor",value:function(){this._actualUserId===this._owner&&this._newCardDelete.classList.remove("card__delete_hidden")}},{key:"deleteCard",value:function(){this.element.remove()}}])&&D(t.prototype,n),e}();function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var H=function(){function e(t){var n,r,o=this,i=t.baseUrl,a=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(){return fetch("".concat(o._baseUrl,"/v1/cohort-26/cards"),{headers:o._headers}).then((function(e){return o._checkResponse(e)}))},(n="getInitialCards")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._baseUrl=i,this._headers=a}var t,n;return t=e,(n=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getUserData",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/v1/cohort-26/users/me"),{headers:this._headers}).then((function(t){return e._checkResponse(t)}))}},{key:"updateUserData",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/v1/cohort-26/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then((function(e){return t._checkResponse(e)}))}},{key:"addNewCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/v1/cohort-26/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){return t._checkResponse(e)}))}},{key:"likesCard",value:function(e,t){var n=this;return fetch("https://mesto.nomoreparties.co/v1/cohort-26/cards/likes/".concat(t),{method:e,headers:this._headers}).then((function(e){return n._checkResponse(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/v1/cohort-26/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._checkResponse(e)}))}},{key:"changeAvatar",value:function(e){var t=this;return fetch("https://mesto.nomoreparties.co/v1/cohort-26/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((function(e){return t._checkResponse(e)}))}}])&&V(t.prototype,n),e}();function J(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var F=null,M=new c(a,e);M.enableValidation();var z=new c(a,r);z.enableValidation();var $=new c(a,o);$.enableValidation();var G=function(e,t){t?e===Z?e.changeButtonText("Создать"):e.changeButtonText("Сохранить"):e.changeButtonText("Сохранение...")},K=new function e(t){var n=this,r=t.nameSelector,o=t.professionSelector,i=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),B(this,"getUserInfo",(function(){return{userName:n._name.textContent,userProfession:n._profession.textContent}})),B(this,"setUserInfo",(function(e){n._name.textContent=e.name,n._profession.textContent=e.about})),B(this,"setUserAvatar",(function(e){n._avatar.src=e.avatar})),this._name=document.querySelector(r),this._profession=document.querySelector(o),this._avatar=document.querySelector(i)}({nameSelector:".profile__name",professionSelector:".profile__profession",avatarSelector:".profile__avatar"}),Q=new g("#popupProfile",(function(e){G(Q,!1),ne.updateUserData(e).then((function(){K.setUserInfo(e),Q.closePopup()})).catch((function(e){return console.log(e)})).finally((function(){G(Q,!0)}))}));Q.setEventListeners(),document.querySelector(".profile__edit-btn").addEventListener("click",(function(){var e;M.deleteErrors(),Q.openPopup(),e=K.getUserInfo(),t.value=e.userName,n.value=e.userProfession}));var W=new g("#popupAddAvatar",(function(){G(W,!1),ne.changeAvatar(document.querySelector(".popup__avatar_link").value).then((function(e){i.src=e.avatar,W.closePopup()})).catch((function(e){return console.log(e)})).finally((function(){G(W,!0)}))}));W.setEventListeners(),document.querySelector(".profile__avatar_container").addEventListener("mousedown",(function(e){(e.target.classList.contains("profile__avatar_edit-btn")||e.target.classList.contains("profile__avatar_overlay"))&&($.deleteErrors(),$.disableButtonSubmit(),W.openPopup())}));var X=new L("#popupImg");X.setEventListeners();var Y=function(e,t){X.openPopup(e,t)},Z=new g("#popupAdd",(function(e){G(Z,!1),ne.addNewCard(e).then((function(e){te.addItem(e),Z.closePopup()})).catch((function(e){return console.log(e)})).finally((function(){G(Z,!0)}))}));Z.setEventListeners(),document.querySelector(".profile__open-add").addEventListener("click",(function(){z.deleteErrors(),z.disableButtonSubmit(),Z.openPopup()}));var ee=new A("#popupConfirm",(function(e){ne.deleteCard(e).then((function(){F.deleteCard(),ee.closePopup()})).catch((function(e){return console.log(e)}))}));ee.setEventListeners();var te=new x({renderer:function(e,t){t.prepend(function(e,t){var n=new N(e,".card__template",Y,(function(){re(e,F=n)}),(function(){oe(e,F=n)}),(function(){F=n,ee.openPopup(n.getId())}));return n.createCard()}(e))}},".card__list"),ne=new H({baseUrl:"https://mesto.nomoreparties.co",headers:{authorization:"166d82c1-8e93-4726-8a90-1ae34485434b","Content-Type":"application/json"}});Promise.all([ne.getUserData(),ne.getInitialCards()]).then((function(e){var t,n,r,o=(r=2,function(e){if(Array.isArray(e))return e}(n=e)||function(e,t){var n=e&&("undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"]);if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(n,r)||function(e,t){if(e){if("string"==typeof e)return J(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?J(e,t):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[0],a=o[1];t=i,K.setUserInfo(t),K.setUserAvatar(t);var u=a.reverse();te.renderItems(u)})).catch((function(e){return console.log(e)}));var re=function(e,t){ne.likesCard("PUT",e._id).then((function(e){t.countLikes(e.likes.length)})).catch((function(e){return console.log(e)}))},oe=function(e,t){ne.likesCard("DELETE",e._id).then((function(e){t.countLikes(e.likes.length)})).catch((function(e){return console.log(e)}))}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,